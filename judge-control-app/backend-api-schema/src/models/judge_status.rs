/*
 * Backend to Judge API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// JudgeStatus : ジャッジの結果
/// ジャッジの結果
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum JudgeStatus {
    #[serde(rename = "AC")]
    Ac,
    #[serde(rename = "WA")]
    Wa,
    #[serde(rename = "TLE")]
    Tle,
    #[serde(rename = "MLE")]
    Mle,
    #[serde(rename = "OLE")]
    Ole,
    #[serde(rename = "RE")]
    Re,
    #[serde(rename = "CE")]
    Ce,
    #[serde(rename = "IE")]
    Ie,

}

impl std::fmt::Display for JudgeStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Ac => write!(f, "AC"),
            Self::Wa => write!(f, "WA"),
            Self::Tle => write!(f, "TLE"),
            Self::Mle => write!(f, "MLE"),
            Self::Ole => write!(f, "OLE"),
            Self::Re => write!(f, "RE"),
            Self::Ce => write!(f, "CE"),
            Self::Ie => write!(f, "IE"),
        }
    }
}

impl Default for JudgeStatus {
    fn default() -> JudgeStatus {
        Self::Ac
    }
}


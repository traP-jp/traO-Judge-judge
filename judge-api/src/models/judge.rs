/*
 * Judge to Backend API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Judge : ジャッジの設定
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Judge {
    /// ジャッジのID
    #[serde(rename = "judgeId")]
    pub judge_id: uuid::Uuid,
    /// ディレクトリの数
    #[serde(rename = "directoryCount")]
    pub directory_count: f64,
    /// テストケース実行前に一度だけ実行されるコマンド
    #[serde(rename = "beforeTestExecs")]
    pub before_test_execs: Vec<models::Execution>,
    /// テストケース実行時に実行されるコマンド
    #[serde(rename = "onTestExecs")]
    pub on_test_execs: Vec<models::Execution>,
    /// テストケース実行後に一度だけ実行されるコマンド
    #[serde(rename = "afterTestExecs")]
    pub after_test_execs: Vec<models::Execution>,
    /// 静的なテキストリソースのID
    #[serde(rename = "textResourceIds")]
    pub text_resource_ids: Vec<uuid::Uuid>,
    /// 動的に変化するテキストデータ
    #[serde(rename = "oneTimetexts")]
    pub one_timetexts: Vec<String>,
}

impl Judge {
    /// ジャッジの設定
    pub fn new(judge_id: uuid::Uuid, directory_count: f64, before_test_execs: Vec<models::Execution>, on_test_execs: Vec<models::Execution>, after_test_execs: Vec<models::Execution>, text_resource_ids: Vec<uuid::Uuid>, one_timetexts: Vec<String>) -> Judge {
        Judge {
            judge_id,
            directory_count,
            before_test_execs,
            on_test_execs,
            after_test_execs,
            text_resource_ids,
            one_timetexts,
        }
    }
}

